#!/bin/bash
# ======================================================================
# Handle command line options
# ======================================================================

# Parse Command Line Options
# ----------------------------------------------------------------------
while getopts :af:l:sh FLAG; do
  case $FLAG in
    a) # Load list of all supported apps
      echo "UNDER CONSTRUCTION"
      exit 1
      ;;
    f) # Create list of recipe sources from an arument list
      recipe_list=$(cat $OPTARG)
      ;;
    l)
      recipe_list=( $OPTARG )

      #counter=0
      #for n in ${recipe_list[*]}; do
      #  counter=$[counter + 1]
      #  echo "$n"
      #done
      ;;
    s) # Show a list of supported apps
      recipe_list=$(ls -m "${DIR}/recipes")
      echo "UNDER CONSTRUCTION"
      exit 1
      ;;
    h)
      HELP
      ;;
    \?)  # Show Option Argument Error
      echo -e \\n"${RED}ERROR: (◦︵○)${RESET}\\nInvalid option: ${BOLD}-$OPTARG${RESET}. Use ${BOLD}-h${RESET} for help."\\n
      export OPTION_ERROR="${RED}ERROR: (◦︵○)${RESET}\\nInvalid option: ${BOLD}-$OPTARG${RESET}. Use ${BOLD}-h${RESET} for help."
      exec $SCRIPT -h
      exit 1
      ;;
    :)  # Show Invalid Argument Error
      export OPTION_ERROR="${RED}ERROR: (◦︵○)${RESET}\\nOption ${BOLD}-$OPTARG${RESET} requires an argument. Use ${BOLD}-h${RESET} for help."
      exec $SCRIPT -h
      exit 1
      ;;
  esac
done


# Tell getops to move to next option
shift $((OPTIND-1))

# Catch when no argumnets are passed, and redirect to help
if [ $OPTIND -eq 1 ]; then exec $SCRIPT -h exit 1; fi


